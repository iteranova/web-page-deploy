---
interface Props {
  title: string;
  infoTitle: string;
  infoText: string;
  email: string;
  address: string;
  address2: string;
  emailLabel: string;
  phoneLabel: string;
  addressLabel: string;
  namePlaceholder: string;
  emailPlaceholder: string;
  subjectPlaceholder: string;
  messagePlaceholder: string;
  submitText: string;
}

const {
  title,
  infoTitle,
  infoText,
  email,
  address,
  address2,
  emailLabel,
  phoneLabel,
  addressLabel,
  namePlaceholder,
  emailPlaceholder,
  subjectPlaceholder,
  messagePlaceholder,
  submitText,
} = Astro.props;
---

<section id="contact" class="min-h-screen flex items-center justify-center px-5 py-20 md:py-0 bg-white">
  <div class="max-w-7xl mx-auto w-full">
    <h2 class="text-3xl md:text-4xl font-bold text-center mb-8 md:mb-12 text-gray-900">{title}</h2>
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 md:gap-12 max-w-5xl mx-auto">
      <div>
        <h3 class="text-xl md:text-2xl font-semibold mb-3 md:mb-4 text-gray-900">{infoTitle}</h3>
        <p class="text-sm md:text-base text-gray-600 leading-relaxed mb-4 md:mb-6">{infoText}</p>
        <div class="mt-6 md:mt-8">
          <div class="flex mb-3 text-sm md:text-base">
            <strong class="w-20">{emailLabel}:</strong>
            <div>
              <div>{email}</div>
            </div>
          </div>
          <div class="flex mb-3 text-sm md:text-base">
            <strong class="w-20">{addressLabel}:</strong>
            <div>
              <div>{address}</div>
              <div>{address2}</div>
            </div>
          </div>
        </div>
      </div>
      <div>
        <form id="contact-form" class="flex flex-col gap-3 md:gap-4">
          <!-- Web3Forms Access Key -->
          <input type="hidden" name="access_key" value="7d427841-eb34-45d6-a3e8-0e5fc35bd9d3" />
          <!-- Redirect after submission (optional) -->
          <input type="hidden" name="redirect" value="false" />
          <!-- Email recipient -->
          <input type="hidden" name="to_email" value="info@itera-nova.com" />
          
          <input
            type="text"
            name="name"
            placeholder={namePlaceholder}
            required
            class="px-3 md:px-3.5 py-3 md:py-3.5 border border-gray-300 rounded-md text-sm md:text-base font-sans transition-colors duration-300 focus:outline-none focus:border-primary"
          />
          <input
            type="email"
            name="email"
            placeholder={emailPlaceholder}
            required
            class="px-3 md:px-3.5 py-3 md:py-3.5 border border-gray-300 rounded-md text-sm md:text-base font-sans transition-colors duration-300 focus:outline-none focus:border-primary"
          />
          <input
            type="text"
            name="subject"
            placeholder={subjectPlaceholder}
            required
            class="px-3 md:px-3.5 py-3 md:py-3.5 border border-gray-300 rounded-md text-sm md:text-base font-sans transition-colors duration-300 focus:outline-none focus:border-primary"
          />
          <textarea
            name="message"
            placeholder={messagePlaceholder}
            rows="5"
            required
            class="px-3 md:px-3.5 py-3 md:py-3.5 border border-gray-300 rounded-md text-sm md:text-base font-sans resize-y transition-colors duration-300 focus:outline-none focus:border-primary"
          ></textarea>
          
          <!-- Status message -->
          <div id="form-status" class="hidden text-sm md:text-base p-3 rounded-md"></div>
          
          <button
            type="submit"
            id="submit-button"
            class="px-6 md:px-8 py-3 md:py-3.5 bg-primary text-white rounded-md font-semibold transition-colors duration-300 hover:bg-primary-dark cursor-pointer border-none text-sm md:text-base"
          >
            {submitText}
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const contactForm = document.getElementById('contact-form') as HTMLFormElement;
    const submitButton = document.getElementById('submit-button') as HTMLButtonElement;
    const formStatus = document.getElementById('form-status') as HTMLDivElement;
    
    if (contactForm) {
      contactForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Disable button and show loading state
        submitButton.disabled = true;
        submitButton.textContent = 'Sending...';
        formStatus.classList.add('hidden');
        
        try {
          const formData = new FormData(contactForm);
          
          // Send to Web3Forms API
          const response = await fetch('https://api.web3forms.com/submit', {
            method: 'POST',
            body: formData
          });
          
          const data = await response.json();
          
          if (data.success) {
            // Show success message
            formStatus.textContent = 'Message sent successfully! We\'ll get back to you soon.';
            formStatus.className = 'text-sm md:text-base p-3 rounded-md bg-green-100 text-green-800 border border-green-300';
            formStatus.classList.remove('hidden');
            
            // Reset form
            contactForm.reset();
          } else {
            throw new Error(data.message || 'Failed to send message');
          }
        } catch (error) {
          // Show error message
          formStatus.textContent = 'Failed to send message. Please try again or email us directly at info@itera-nova.com';
          formStatus.className = 'text-sm md:text-base p-3 rounded-md bg-red-100 text-red-800 border border-red-300';
          formStatus.classList.remove('hidden');
          console.error('Form submission error:', error);
        } finally {
          // Re-enable button
          submitButton.disabled = false;
          submitButton.textContent = submitButton.getAttribute('data-original-text') || 'Send Message';
        }
      });
      
      // Store original button text
      submitButton.setAttribute('data-original-text', submitButton.textContent || 'Send Message');
    }
  });
</script>
